name: Build

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_TERM_VERBOSE: true
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
  CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER: x86_64-linux-gnu-gcc
  RUSTFLAGS: -C target-feature=+crt-static

jobs:
  build:
    strategy:
      matrix:
        arch: [aarch64, x86_64]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.arch }}-${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: ${{ matrix.arch }}-${{ runner.os }}-cargo
    - run: "[ $(uname -m) == ${{ matrix.arch }} ] || (sudo apt update -y && sudo apt install -y binutils-${{ matrix.arch }}-linux-gnu gcc-${{ matrix.arch }}-linux-gnu)"
    - run: rustup target add ${{ matrix.arch }}-unknown-linux-gnu
    - run: cargo build --release --target ${{ matrix.arch }}-unknown-linux-gnu
    - uses: actions/upload-artifact@v4
      with:
        name: loggy-${{ matrix.arch }}
        path: target/${{ matrix.arch }}-unknown-linux-gnu/release/loggy
    - run: aws s3 cp target/${{ matrix.arch }}-unknown-linux-gnu/release/loggy s3://${S3_BUCKET}/loggy-${{ matrix.arch }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
